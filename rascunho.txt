#CURRICULOS
#Cria curriculos

#def post_curriculos(request):
#    if request.method == 'POST':
#        # Instanciar os formulários com os dados do POST
#        personal_data_form = FormularioPersonalData(request.POST)
#        contact_form = FormularioContato(request.POST)
#        professional_experience_form = FormularioProfessionalExperience(request.POST)
#        academic_formation_form = FormularioAcademicFormation(request.POST)
#
#        # Verificar se todos os formulários são válidos
#        if (personal_data_form.is_valid() and contact_form.is_valid() and
#            professional_experience_form.is_valid() and academic_formation_form.is_valid()):
#            
#            # Salvar os dados
#            personal_data_form.save()
#            contact_form.save()
#            professional_experience_form.save()
#            academic_formation_form.save()
#
#            return HttpResponse("Formulário enviado com sucesso!")
#    
#    else:
#        # Se for GET, renderiza os formulários vazios
#        personal_data_form = FormularioPersonalData()
#        contact_form = FormularioContato()
#        professional_experience_form = FormularioProfessionalExperience()
#        academic_formation_form = FormularioAcademicFormation()

    # Renderiza o template com os formulários (POST inválido ou GET inicial)
#   return render(request, 'recrutamento/send_application.html', {
#        'personal_data_form': personal_data_form,
#        'contact_form': contact_form,
#        'professional_experience_form': professional_experience_form,
#        'academic_formation_form': academic_formation_form,
#    })


#class CurriculumForm(forms.Form):
#    personal_data = FormularioPersonalData()
#    contact = FormularioContato()
#    professional_experience = FormularioProfessionalExperience()
#    academic_formation = FormularioAcademicFormation()

#    def save(self):
#        personal_data = self.cleaned_data['personal_data'].save()
#        contact = self.cleaned_data['contact'].save()
#        professional_experience = self.cleaned_data['professional_experience'].save()
#        academic_formation = self.cleaned_data['academic_formation'].save()
#        # Save the entire curriculum
#        curriculo = Curriculo(
#            curr_personal_data=personal_data,
#            curr_contact=contact,
#            curr_professional_experience=professional_experience,
#            curr_academic_formation=academic_formation
#        )
#        curriculo.save()